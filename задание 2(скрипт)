# Установка пакета pymysql

import pymysql.cursors


# Определение функции для установления соединения с базой. Поля host, user, password, db заполняются самостоятельно
def getConnection():
     
    connection = pymysql.connect(host='localhost',
                                 user='root',
                                 password='',                             
                                 db='orders',
                                 charset='utf8mb4',
                                 cursorclass=pymysql.cursors.DictCursor)
    return connection


# Вывод списка инструментов, по которым можно построить очередь заявок

connection = getConnection()
with connection.cursor() as cursor:
        sql = "SELECT seccode FROM security_type order by instrument_type, seccode"
        cursor.execute(sql)
        table = pd.DataFrame(cursor.fetchall())
        print(table)
connection.close()


# Присвоение переменной a значение тикера, данные по которому необходимо запросить. Список доступных тикеров можно получить, выполнив команду выше

a = input('Введите тикер  ')


# Присвоение переменной b момента времени, данные на который необходимо запросить. Момент времени должен быть записан в формате HHMMSSQQQ

b = int(input('Введите момент времени в течение торговой сессий  '))
if (b>0) and (b<235999999):


# Вывод введенных пользователем значений, для того чтобы дать ему возможность проверить правильность введенных значений

print ('Вы запросили очередь заявок по инструменту', a, 'на момент времени', b)
else:
    print ('Введенное время не соответствует требуемому формату')
    b = int(input('Введите момент времени в течение торговой сессий  '))
    print ('Вы запросили очередь заявок по инструменту', a, 'на момент времени', b)


# Вывод всех записей, которые удовлетворяют условиям, введенным пользователем
# ВНИМАНИЕ! КОСТЫЛЬ! возникает ошибка при написании 'and ordertime <=b', как ее исправить, не разобралась, поэтому придется вручную менять время в коде

connection = getConnection()
with connection.cursor() as cursor:
        cursor.execute("SELECT * FROM orders WHERE (seccode = 'a') AND ordertime < 101000000;")
        rows = cursor.fetchall()
        
#Попытка создать таблицу с данными по ценам и накопленным объемам
quote = [] #(buysell, price, volume)
for elem in rows: #движение по строкам из результата запроса в базе
    if elem[6]==1: #действия для неисполненных заявок
         for j in quote: #движение по стакану
            if quote[2] == elem[7]: #действия, если в стакане уже есть такой уровень цены
                quote[3] += elem[8]
                quote[1]==elem[3]
            else: 
                quote.append([elem[3],elem[7],elem[8]]) #действия, если в стакане нет такого уровня цены
    else: #действия для отмененных или исполненных заявок
        for j in quote:
            if quote[2] == elem [7]: #действия, если в стакане уже есть такой уровень цены
                quote [3] -= elem[8]
                quote[1]==elem[3]
            else:
                quote.append([elem[3],elem[7],elem[8]]) #действия, если в стакане нет такого уровня цены
print(quote)

    



